---

- name: Remove usless system packages
  dnf:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
    - zfs-fuse

- name: Install system packages
  dnf:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - fedora-workstation-repositories
      - ca-certificates
      - dkms
      - kernel-devel
      - kernel-headers
      - gcc
      - bzip2
      - curl
      - wget
      - openssh
      - vim
      - htop
      - iotop
      - ncdu
      - net-tools
      - firejail
      - gnome-usage
      - zram
      - mlocate
      - gnome-dictionary
      - arp-scan
      - autossh
      - cmake
      - iperf
      - iperf3
      - jq
      - jo
      - netcat
      - nmap
      - openldap
      - openldap-devel
      - pipenv
      - virtualenv
      - pv
      - qrencode
      - rsync
      - speedtest-cli
      - smartmontools
      - sshfs
      - telnet
      - tree
      - exif
      - youtube-dl
      - zstd
      - lz4
      - android-file-transfer
      - android-tools
      - snapd
      # - akmod-nvidia #! Nvidia Only
      - redhat-lsb-core
      - corectrl
      - zsh
      - zsh-syntax-highlighting
      - zsh-autosuggestions
      - ufw
      - screen
      - perl-Image-ExifTool
      - compsize
      - adb-enhanced
      - mdadm
      - sushi
      - wine
      - libxml2-devel
      - make
      - ruby-devel
      - tor
      - obfs4
      - proxychains-ng
      - zfs
      - hashcat
      - supervisor
      - arm-image-installer
      - "@Development Tools"
      - "@development-tools"
      - git
      - ansible
      - ninja-build
      - clang
      - clang-devel
      - golang
      - python3
      - python3-pip
      - python3-devel
      - python-devel
      - java-11-openjdk
      - java-11-openjdk-devel


- name: Install PostgreSQL packages
  dnf:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - postgresql
      - postgresql-contrib
      - postgresql-server
      - postgresql-server-devel
- name: Disable autoload & stop Postgres service
  service:
    name: postgresql
    state: stopped
    enabled: no

- name: Install MySQL packages
  dnf:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - community-mysql
      - community-mysql-server
- name: Disable autoload & stop MySQL service
  service:
    name: mysqld
    state: stopped
    enabled: no

- name: Install Redis
  dnf:
    name: redis
    state: present
- name: Disable autoload & stop Redis
  service:
    name: redis
    enabled: no
    state: stopped

- name: Install Nginx packages
  dnf:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - nginx
      - nginx-all-modules
- name: Disable autoload & stop Nginx
  service:
    name: nginx
    enabled: no
    state: stopped

- name: Install NetTools
  dnf:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - wireguard
      - wireguard-tools
      - openconnect
      - NetworkManager-l2tp
      - NetworkManager-l2tp-gnome
      - NetworkManager-openconnect-gnome
      - NetworkManager-openvpn-gnome

- name: Enable autoload & start I2Pd service
  service:
    name: i2pd
    state: started
    enabled: yes

- name: Enable autoload & start TOR service
  service:
    name: tor
    state: started
    enabled: yes

- name: Add the ZFS module
  become: true
  community.general.modprobe:
    name: zfs
    state: present
- name: Check ZFS autoload file
  become: true
  file:
    path: /etc/modules-load.d/zfs.conf
    state: touch
- name: Configure Redis listen interface
  become: true
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/zfs.conf
    line: "zfs"
    owner: root
    group: root
    mode: '0644'

- name: Enable autoload & start sshd service
  service:
    name: sshd
    state: started
    enabled: yes

- name: Disable autoload & stop firewalld service
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: Enable autoload & start ufw service
  become: true
  service:
    name: ufw
    state: started
    enabled: yes

- name: Stop UFW
  become: true
  community.general.ufw:
    state: disabled

- name: Reset UFW
  become: true
  community.general.ufw:
    state: reset

- name: Allow all access to port 22
  become: true
  community.general.ufw:
    rule: allow
    port: '22'

- name: Allow all access from RFC1918 networks to this host
  become: true
  community.general.ufw:
    rule: allow
    src: '{{ item }}'
  loop:
    - 127.0.0.0/8
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
- name: Allow all access from Docker networks to this host
  become: true
  community.general.ufw:
    rule: allow
    src: '{{ item }}'
  loop:
    # Docker subnet
    - 172.17.0.0/16
    - 172.18.0.0/16

- name: Reject everything and enable UFW
  become: true
  community.general.ufw:
    state: enabled
    policy: reject

- name: Reload UFW
  become: true
  community.general.ufw:
    state: reloaded

- name: Check root SSH dir
  file: 
    path: "/root/.ssh"
    state: directory

- name: Check user SSH dir
  file:
    path: "/home/{{ os_user }}/.ssh"
    state: directory
  become: true
  become_user: "{{ os_user }}"

- name: Inspect root SSH key
  openssh_keypair:
    path: "/root/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
    force: no
  become: true

- name: Inspect user SSH key
  openssh_keypair:
    path: "/home/{{ os_user }}/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
    force: no
  become: true
  become_user: "{{ os_user }}"

- name: Create user GIT dir
  file:
    path: "/home/{{ os_user }}/git"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: "0755"
  become: true
  become_user: "{{ os_user }}"

- name: Create git lib dir
  file:
    path: "{{ git_lib }}"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: "0777"

- name: Copy wallpaper
  copy:
    src: "files/Wallpaper"
    dest: "/home/{{os_user}}/Pictures/"
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: '0444'
