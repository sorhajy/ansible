- name: Install Redis
  become: true
  apt: 
    name: redis
    state: present
- name: Configure Redis password
  become: true
  ansible.builtin.lineinfile:
    path: /etc/redis/redis.conf
    regexp: '^# requirepass foobared'
    line: "requirepass {{ redis_password }}"
    owner: redis
    group: redis
    mode: '0640'
- name: Configure Redis listen interface
  become: true
  ansible.builtin.lineinfile:
    path: /etc/redis/redis.conf
    regexp: '^bind 127.0.0.1 ::1'
    line: "# bind 127.0.0.1 ::1"
    owner: redis
    group: redis
    mode: '0640'
- name: Disable autostart & stop Redis
  become: true
  service:
    name: redis-server
    enabled: no
    state: stopped



- name: Install PostgreSQL
  become: true
  apt: 
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - postgresql
    - postgresql-contrib
    - postgresql-common
    - postgresql-client
    - postgresql-client-common
    - python3-psycopg2
    - python3-ipaddr

- name: Start PostgreSQL service
  become: true
  service:
    name: postgresql
    state: started

- name: Change postgres password
  become: true
  become_method: enable
  command: sudo su postgres -c "psql -c \"ALTER USER postgres WITH PASSWORD '{{ postgres_password }}';\""

- name: Collect PostgreSQL version
  community.postgresql.postgresql_info:
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "{{ postgres_password }}"
    filter: ver*
  register: postgres_version

- name: Configure PostgreSQL allow connection
  become: true
  community.postgresql.postgresql_pg_hba:
    dest: /etc/postgresql/{{postgres_version.version.major}}/main/pg_hba.conf
    contype: host
    users: all
    source: "0.0.0.0/0"
    databases: all
    method: md5
    create: true

- name: Set PostgreSQL listen interface
  become: true
  community.postgresql.postgresql_set:
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "{{ postgres_password }}"
    name: listen_addresses
    value: "*"

- name: Reload PostgreSQL configuration
  community.postgresql.postgresql_query:
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "{{ postgres_password }}"
    db: postgres
    query: "SELECT pg_reload_conf();"

- name: Enable autoload & start PostgreSQL service
  become: true
  service:
    name: postgresql
    enabled: true
    state: started



- name: Install MySQL
  become: true
  apt: 
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - default-mysql-server
      - default-mysql-client
      - python3-pymysql

- name: Start MySQL service
  become: true
  service:
    name: mysql
    state: started

- name: Set MySQL root Password
  ignore_errors: true
  become: true
  mysql_user:
    login_unix_socket: "/var/run/mysqld/mysqld.sock"
    # login_password: "{{ mysql_root_password }}"
    name: "root"
    password: "{{ mysql_root_password }}"
    state: present

- name: Configure listen interface
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf 
    regexp: '^bind-address		= 127.0.0.1'
    line: 'bind-address		= 0.0.0.0'
    owner: root
    group: root
    mode: '0644'
- name: Configure listen mysqlx interface
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf 
    regexp: '^mysqlx-bind-address	= 127.0.0.1'
    line: 'mysqlx-bind-address	= 0.0.0.0'
    owner: root
    group: root
    mode: '0644'

- name: Enable autoload & start MySQL service
  become: true
  service:
    name: mysql
    state: started
    enabled: true



- name: Add ClickHouse GPG key
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: E0C56BD4
- name: Add ClickHouse repo
  become: true
  apt_repository:
    repo: "deb http://repo.yandex.ru/clickhouse/deb/stable/ main/"
    state: present
- name: Install ClickHouse
  become: true
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - clickhouse-server
      - clickhouse-client
- name: Configure ClickHouse user
  become: true
  template:
    src: roles/server-ubuntu/templates/clickhouse_user.xml.j2
    dest: /etc/clickhouse-server/users.d/{{ clickhouse_user }}.xml
- name: Disable autoload & stop ClickHouse service
  become: true
  service:
    name: clickhouse-server
    state: started
    enabled: true
